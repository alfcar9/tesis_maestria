s <- str_extract(string, "\\d+$") %>% as.double()
return(s)
}
# Extracts the distance function of R
dist_extract <- function(string){
s <- str_match(string, "\\S+$")
return(s)
}
name_instance <- "gr137.tsp"
name_instance_path <- paste0("../TSPLIB/TSPLIB_original/", name_instance)
instance_vector <- readLines(name_instance_path)[4:5]
n <- num_extract(instance_vector[1])
edge_type <- dist_extract(instance_vector[2])
if(edge_type == "EUC_2D"){
cities_pos_df  <- read_table2(name_instance_path, skip = 6, col_names = c("V1", "V2"), n_max = n, col_types = cols("-", "d", "d")) %>% as.data.frame() %>% distinct()
n <- nrow(cities_pos_df)
} else if (edge_type == "GEO"){
cities_pos_df  <- read_table2(name_instance_path, skip = 7, col_names = c("V1", "V2"), n_max = n, col_types = cols("-", "d", "d")) %>% as.data.frame() %>% distinct()
n <- nrow(cities_pos_df)
} else{
cities_pos_df <- NA
}
cities_pos <- as.matrix(cities_pos_df)
etsp <- ETSP(cities_pos_df)
tour <- solve_TSP(etsp)
plot(etsp, tour, tour_col = "red")
tour
library(TSP)
library(tidyverse)
set.seed(130912)
num_extract <- function(string){
s <- str_extract(string, "\\d+$") %>% as.double()
return(s)
}
# Extracts the distance function of R
dist_extract <- function(string){
s <- str_match(string, "\\S+$")
return(s)
}
name_instance <- "gr202.tsp"
name_instance_path <- paste0("../TSPLIB/TSPLIB_original/", name_instance)
instance_vector <- readLines(name_instance_path)[4:5]
n <- num_extract(instance_vector[1])
edge_type <- dist_extract(instance_vector[2])
if(edge_type == "EUC_2D"){
cities_pos_df  <- read_table2(name_instance_path, skip = 6, col_names = c("V1", "V2"), n_max = n, col_types = cols("-", "d", "d")) %>% as.data.frame() %>% distinct()
n <- nrow(cities_pos_df)
} else if (edge_type == "GEO"){
cities_pos_df  <- read_table2(name_instance_path, skip = 7, col_names = c("V1", "V2"), n_max = n, col_types = cols("-", "d", "d")) %>% as.data.frame() %>% distinct()
n <- nrow(cities_pos_df)
} else{
cities_pos_df <- NA
}
cities_pos <- as.matrix(cities_pos_df)
etsp <- ETSP(cities_pos_df)
tour <- solve_TSP(etsp)
plot(etsp, tour, tour_col = "red")
tour
library(TSP)
library(tidyverse)
set.seed(130912)
num_extract <- function(string){
s <- str_extract(string, "\\d+$") %>% as.double()
return(s)
}
# Extracts the distance function of R
dist_extract <- function(string){
s <- str_match(string, "\\S+$")
return(s)
}
name_instance <- "gr226.tsp"
name_instance_path <- paste0("../TSPLIB/TSPLIB_original/", name_instance)
instance_vector <- readLines(name_instance_path)[4:5]
n <- num_extract(instance_vector[1])
edge_type <- dist_extract(instance_vector[2])
if(edge_type == "EUC_2D"){
cities_pos_df  <- read_table2(name_instance_path, skip = 6, col_names = c("V1", "V2"), n_max = n, col_types = cols("-", "d", "d")) %>% as.data.frame() %>% distinct()
n <- nrow(cities_pos_df)
} else if (edge_type == "GEO"){
cities_pos_df  <- read_table2(name_instance_path, skip = 7, col_names = c("V1", "V2"), n_max = n, col_types = cols("-", "d", "d")) %>% as.data.frame() %>% distinct()
n <- nrow(cities_pos_df)
} else{
cities_pos_df <- NA
}
cities_pos <- as.matrix(cities_pos_df)
etsp <- ETSP(cities_pos_df)
tour <- solve_TSP(etsp)
plot(etsp, tour, tour_col = "red")
tour
library(TSP)
library(tidyverse)
set.seed(130912)
num_extract <- function(string){
s <- str_extract(string, "\\d+$") %>% as.double()
return(s)
}
# Extracts the distance function of R
dist_extract <- function(string){
s <- str_match(string, "\\S+$")
return(s)
}
name_instance <- "gr229.tsp"
name_instance_path <- paste0("../TSPLIB/TSPLIB_original/", name_instance)
instance_vector <- readLines(name_instance_path)[4:5]
n <- num_extract(instance_vector[1])
edge_type <- dist_extract(instance_vector[2])
if(edge_type == "EUC_2D"){
cities_pos_df  <- read_table2(name_instance_path, skip = 6, col_names = c("V1", "V2"), n_max = n, col_types = cols("-", "d", "d")) %>% as.data.frame() %>% distinct()
n <- nrow(cities_pos_df)
} else if (edge_type == "GEO"){
cities_pos_df  <- read_table2(name_instance_path, skip = 7, col_names = c("V1", "V2"), n_max = n, col_types = cols("-", "d", "d")) %>% as.data.frame() %>% distinct()
n <- nrow(cities_pos_df)
} else{
cities_pos_df <- NA
}
cities_pos <- as.matrix(cities_pos_df)
etsp <- ETSP(cities_pos_df)
tour <- solve_TSP(etsp)
plot(etsp, tour, tour_col = "red")
tour
library(TSP)
library(tidyverse)
set.seed(130912)
num_extract <- function(string){
s <- str_extract(string, "\\d+$") %>% as.double()
return(s)
}
# Extracts the distance function of R
dist_extract <- function(string){
s <- str_match(string, "\\S+$")
return(s)
}
name_instance <- "ulysses16.tsp"
name_instance_path <- paste0("../TSPLIB/TSPLIB_original/", name_instance)
instance_vector <- readLines(name_instance_path)[4:5]
n <- num_extract(instance_vector[1])
edge_type <- dist_extract(instance_vector[2])
if(edge_type == "EUC_2D"){
cities_pos_df  <- read_table2(name_instance_path, skip = 6, col_names = c("V1", "V2"), n_max = n, col_types = cols("-", "d", "d")) %>% as.data.frame() %>% distinct()
n <- nrow(cities_pos_df)
} else if (edge_type == "GEO"){
cities_pos_df  <- read_table2(name_instance_path, skip = 7, col_names = c("V1", "V2"), n_max = n, col_types = cols("-", "d", "d")) %>% as.data.frame() %>% distinct()
n <- nrow(cities_pos_df)
} else{
cities_pos_df <- NA
}
cities_pos <- as.matrix(cities_pos_df)
etsp <- ETSP(cities_pos_df)
tour <- solve_TSP(etsp)
plot(etsp, tour, tour_col = "red")
tour
library(TSP)
library(tidyverse)
set.seed(130912)
num_extract <- function(string){
s <- str_extract(string, "\\d+$") %>% as.double()
return(s)
}
# Extracts the distance function of R
dist_extract <- function(string){
s <- str_match(string, "\\S+$")
return(s)
}
name_instance <- "ulysses22.tsp"
name_instance_path <- paste0("../TSPLIB/TSPLIB_original/", name_instance)
instance_vector <- readLines(name_instance_path)[4:5]
n <- num_extract(instance_vector[1])
edge_type <- dist_extract(instance_vector[2])
if(edge_type == "EUC_2D"){
cities_pos_df  <- read_table2(name_instance_path, skip = 6, col_names = c("V1", "V2"), n_max = n, col_types = cols("-", "d", "d")) %>% as.data.frame() %>% distinct()
n <- nrow(cities_pos_df)
} else if (edge_type == "GEO"){
cities_pos_df  <- read_table2(name_instance_path, skip = 7, col_names = c("V1", "V2"), n_max = n, col_types = cols("-", "d", "d")) %>% as.data.frame() %>% distinct()
n <- nrow(cities_pos_df)
} else{
cities_pos_df <- NA
}
cities_pos <- as.matrix(cities_pos_df)
etsp <- ETSP(cities_pos_df)
tour <- solve_TSP(etsp)
plot(etsp, tour, tour_col = "red")
tour
set.seed(130912)
name_instance <- "gr202.tsp"
name_instance_path <- paste0("../TSPLIB/TSPLIB_original/", name_instance)
instance_vector <- readLines(name_instance_path)[4:5]
n <- num_extract(instance_vector[1])
edge_type <- dist_extract(instance_vector[2])
if(edge_type == "EUC_2D"){
cities_pos_df  <- read_table2(name_instance_path, skip = 6, col_names = c("V1", "V2"), n_max = n, col_types = cols("-", "d", "d")) %>% as.data.frame() %>% distinct()
n <- nrow(cities_pos_df)
} else if (edge_type == "GEO"){
cities_pos_df  <- read_table2(name_instance_path, skip = 7, col_names = c("V1", "V2"), n_max = n, col_types = cols("-", "d", "d")) %>% as.data.frame() %>% distinct()
n <- nrow(cities_pos_df)
} else{
cities_pos_df <- NA
}
cities_pos <- as.matrix(cities_pos_df)
gr202mat <- matrix_cost(cities_pos, n, distance_type) # Generate distance matrix
set.seed(130912)
name_instance <- "gr202.tsp"
name_instance_path <- paste0("../TSPLIB/TSPLIB_original/", name_instance)
instance_vector <- readLines(name_instance_path)[4:5]
n <- num_extract(instance_vector[1])
edge_type <- dist_extract(instance_vector[2])
if(edge_type == "EUC_2D"){
cities_pos_df  <- read_table2(name_instance_path, skip = 6, col_names = c("V1", "V2"), n_max = n, col_types = cols("-", "d", "d")) %>% as.data.frame() %>% distinct()
n <- nrow(cities_pos_df)
} else if (edge_type == "GEO"){
cities_pos_df  <- read_table2(name_instance_path, skip = 7, col_names = c("V1", "V2"), n_max = n, col_types = cols("-", "d", "d")) %>% as.data.frame() %>% distinct()
n <- nrow(cities_pos_df)
} else{
cities_pos_df <- NA
}
cities_pos <- as.matrix(cities_pos_df)
gr202mat <- matrix_cost(cities_pos, n, edge_type) # Generate distance matrix
edge_type
write.table(gr202mat, path = "grmat.csv", quote = FALSE, row.names = FALSE, col.names = FALSE, sep = ",")
write.table(gr202mat, file = "gr202mat.csv", quote = FALSE, row.names = FALSE, col.names = FALSE, sep = ",")
set.seed(130912)
name_instance <- "gr229.tsp"
name_instance_path <- paste0("../TSPLIB/TSPLIB_original/", name_instance)
instance_vector <- readLines(name_instance_path)[4:5]
n <- num_extract(instance_vector[1])
edge_type <- dist_extract(instance_vector[2])
if(edge_type == "EUC_2D"){
cities_pos_df  <- read_table2(name_instance_path, skip = 6, col_names = c("V1", "V2"), n_max = n, col_types = cols("-", "d", "d")) %>% as.data.frame() %>% distinct()
n <- nrow(cities_pos_df)
} else if (edge_type == "GEO"){
cities_pos_df  <- read_table2(name_instance_path, skip = 7, col_names = c("V1", "V2"), n_max = n, col_types = cols("-", "d", "d")) %>% as.data.frame() %>% distinct()
n <- nrow(cities_pos_df)
} else{
cities_pos_df <- NA
}
cities_pos <- as.matrix(cities_pos_df)
gr229mat <- matrix_cost(cities_pos, n, edge_type) # Generate distance matrix
write.table(gr229mat, file = "gr229mat.csv", quote = FALSE, row.names = FALSE, col.names = FALSE, sep = ",")
set.seed(130912)
name_instance <- "gr137.tsp"
name_instance_path <- paste0("../TSPLIB/TSPLIB_original/", name_instance)
instance_vector <- readLines(name_instance_path)[4:5]
n <- num_extract(instance_vector[1])
edge_type <- dist_extract(instance_vector[2])
if(edge_type == "EUC_2D"){
cities_pos_df  <- read_table2(name_instance_path, skip = 6, col_names = c("V1", "V2"), n_max = n, col_types = cols("-", "d", "d")) %>% as.data.frame() %>% distinct()
n <- nrow(cities_pos_df)
} else if (edge_type == "GEO"){
cities_pos_df  <- read_table2(name_instance_path, skip = 7, col_names = c("V1", "V2"), n_max = n, col_types = cols("-", "d", "d")) %>% as.data.frame() %>% distinct()
n <- nrow(cities_pos_df)
} else{
cities_pos_df <- NA
}
cities_pos <- as.matrix(cities_pos_df)
gr137mat <- matrix_cost(cities_pos, n, edge_type) # Generate distance matrix
write.table(gr137mat, file = "gr137mat.csv", quote = FALSE, row.names = FALSE, col.names = FALSE, sep = ",")
set.seed(130912)
name_instance <- "gr96.tsp"
name_instance_path <- paste0("../TSPLIB/TSPLIB_original/", name_instance)
instance_vector <- readLines(name_instance_path)[4:5]
n <- num_extract(instance_vector[1])
edge_type <- dist_extract(instance_vector[2])
if(edge_type == "EUC_2D"){
cities_pos_df  <- read_table2(name_instance_path, skip = 6, col_names = c("V1", "V2"), n_max = n, col_types = cols("-", "d", "d")) %>% as.data.frame() %>% distinct()
n <- nrow(cities_pos_df)
} else if (edge_type == "GEO"){
cities_pos_df  <- read_table2(name_instance_path, skip = 7, col_names = c("V1", "V2"), n_max = n, col_types = cols("-", "d", "d")) %>% as.data.frame() %>% distinct()
n <- nrow(cities_pos_df)
} else{
cities_pos_df <- NA
}
cities_pos <- as.matrix(cities_pos_df)
gr96mat <- matrix_cost(cities_pos, n, edge_type) # Generate distance matrix
write.table(gr96mat, file = "gr96mat.csv", quote = FALSE, row.names = FALSE, col.names = FALSE, sep = ",")
set.seed(130912)
name_instance <- "burma14.tsp"
name_instance_path <- paste0("../TSPLIB/TSPLIB_original/", name_instance)
instance_vector <- readLines(name_instance_path)[4:5]
n <- num_extract(instance_vector[1])
edge_type <- dist_extract(instance_vector[2])
if(edge_type == "EUC_2D"){
cities_pos_df  <- read_table2(name_instance_path, skip = 6, col_names = c("V1", "V2"), n_max = n, col_types = cols("-", "d", "d")) %>% as.data.frame() %>% distinct()
n <- nrow(cities_pos_df)
} else if (edge_type == "GEO"){
cities_pos_df  <- read_table2(name_instance_path, skip = 8, col_names = c("V1", "V2"), n_max = n, col_types = cols("-", "d", "d")) %>% as.data.frame() %>% distinct()
n <- nrow(cities_pos_df)
} else{
cities_pos_df <- NA
}
cities_pos <- as.matrix(cities_pos_df)
burma14mat <- matrix_cost(cities_pos, n, edge_type) # Generate distance matrix
write.table(burma14mat, file = "burma14mat.csv", quote = FALSE, row.names = FALSE, col.names = FALSE, sep = ",")
set.seed(130912)
name_instance <- "ulysses16.tsp"
name_instance_path <- paste0("../TSPLIB/TSPLIB_original/", name_instance)
instance_vector <- readLines(name_instance_path)[4:5]
n <- num_extract(instance_vector[1])
edge_type <- dist_extract(instance_vector[2])
if(edge_type == "EUC_2D"){
cities_pos_df  <- read_table2(name_instance_path, skip = 6, col_names = c("V1", "V2"), n_max = n, col_types = cols("-", "d", "d")) %>% as.data.frame() %>% distinct()
n <- nrow(cities_pos_df)
} else if (edge_type == "GEO"){
cities_pos_df  <- read_table2(name_instance_path, skip = 7, col_names = c("V1", "V2"), n_max = n, col_types = cols("-", "d", "d")) %>% as.data.frame() %>% distinct()
n <- nrow(cities_pos_df)
} else{
cities_pos_df <- NA
}
cities_pos <- as.matrix(cities_pos_df)
ulysses16 <- matrix_cost(cities_pos, n, edge_type) # Generate distance matrix
write.table(ulysses16mat, file = "ulysses16mat.csv", quote = FALSE, row.names = FALSE, col.names = FALSE, sep = ",")
ulysses16mat <- matrix_cost(cities_pos, n, edge_type) # Generate distance matrix
write.table(ulysses16mat, file = "ulysses16mat.csv", quote = FALSE, row.names = FALSE, col.names = FALSE, sep = ",")
set.seed(130912)
name_instance <- "ulysses22.tsp"
name_instance_path <- paste0("../TSPLIB/TSPLIB_original/", name_instance)
instance_vector <- readLines(name_instance_path)[4:5]
n <- num_extract(instance_vector[1])
edge_type <- dist_extract(instance_vector[2])
if(edge_type == "EUC_2D"){
cities_pos_df  <- read_table2(name_instance_path, skip = 6, col_names = c("V1", "V2"), n_max = n, col_types = cols("-", "d", "d")) %>% as.data.frame() %>% distinct()
n <- nrow(cities_pos_df)
} else if (edge_type == "GEO"){
cities_pos_df  <- read_table2(name_instance_path, skip = 7, col_names = c("V1", "V2"), n_max = n, col_types = cols("-", "d", "d")) %>% as.data.frame() %>% distinct()
n <- nrow(cities_pos_df)
} else{
cities_pos_df <- NA
}
cities_pos <- as.matrix(cities_pos_df)
ulysses22mat <- matrix_cost(cities_pos, n, edge_type) # Generate distance matrix
write.table(ulysses22mat, file = "ulysses22mat.csv", quote = FALSE, row.names = FALSE, col.names = FALSE, sep = ",")
trace(dist, edit = T)
opt <- c(2579, 7542, 118282, 3323, 6110, 6528, 15780, 426, 538, 629, 2378, 55209, 69853, 40160, 134602, 21282, 22141,
20749, 21294, 22068, 26254, 26150, 29368, 29437, 14379, 108159, 44303, 59030, 96772, 58537, 73682, 80369, 49135, 48191, 1211, 2323, 7910, 675, 126643, 3919, 42080, 6859, 7013)
msa <- c(2765, 7542, 123904, 3323, 6460, 6669, 16528, 446, 564, 664, 2534, 55860, 73852, 42486, 153233, 21867, 22250, 21107, 22365, 22992, 27346, 26508, 30709, 30721, 14416,
110587, 44501, 59981, 102368, 58870, 76933, 82453, 49309, 51979, 1242, 2431, 8049, 685, 132363, 4032, 43229, 6859, 7013)
opt/msa
100*(opt/msa-1)
100*(msa/opt-1)
round(100*(msa/opt-1),2)
round(100*(msa/opt-1),1)
dimension <- c(280, 52, 127, 14, 130, 150, 198, 51, 76, 101, 262, 96, 137, 202, 229, 100, 100, 100,
100, 100, 150, 150, 200, 200, 105, 76, 107, 124, 136, 144, 152, 226, 264, 299, 99, 195, 100,
70 ,225, 225, 159, 16, 22)
opt <- c(2579, 7542, 118282, 3323, 6110, 6528, 15780, 426, 538, 629, 2378, 55209, 69853, 40160, 134602, 21282, 22141,
20749, 21294, 22068, 26254, 26150, 29368, 29437, 14379, 108159, 44303, 59030, 96772, 58537, 73682, 80369, 49135, 48191, 1211, 2323, 7910, 675, 126643, 3919, 42080, 6859, 7013)
msa <- c(2765, 7542, 123904, 3323, 6460, 6669, 16528, 446, 564, 664, 2534, 55860, 73852, 42486, 153233, 21867, 22250, 21107, 22365, 22992, 27346, 26508, 30709, 30721, 14416,
110587, 44501, 59981, 102368, 58870, 76933, 82453, 49309, 51979, 1242, 2431, 8049, 685, 132363, 4032, 43229, 6859, 7013)
ratio <- round(100*(msa/opt-1),1)
time <- c(545, 8, 174, 1, 96, 176, 396, 7, 21, 72, 1030, 48, 74, 288, 720, 44, 80, 57, 53, 65, 216, 210, 528, 652, 89, 19, 95, 117, 145, 163, 152, 932, 878, 1236, 39, 317,
55, 15, 409, 793, 238, 1, 2)
results_df <- data.frame(R = ratio, n = dimension, t = time)
m <- lm(t ~  poly(n, 3, raw = TRUE), data = results_df)
coefficients(m)
time_predicted <- predict(m, data.frame(n = dimension))
g1 <- ggplot(results_df, aes(x = R)) + geom_histogram(aes(y = ..density..), bins = 20) + theme_bw() + xlab("% R") + ylab("Freq")
g2 <- ggplot(results_df, aes(x = n, y =R )) + geom_point() + theme_bw() + xlab("n") + ylab("%R")
g3 <- ggplot(results_df, aes(x = n, y = time )) + geom_point() + theme_bw() + xlab("n") + ylab("time") + geom_line(aes(y = time_predicted))
grid.arrange(g1, g2, g3, ncol=3)
msa <- c(2765, 7542, 123904, 3323, 6460, 6669, 16528, 446, 564, 664, 2534, 57378, 73852, 42486, 153233, 21867, 22250, 21107, 22365, 22992, 27346, 26508, 30709, 30721,
14416, 110587, 44501, 59981, 102368, 58870, 76933, 82453, 49309, 51979, 1242, 2431, 8049, 685, 132363, 4032, 43229, 6859, 7013)
grdy <- c(2958, 9623, 130443, 3323, 7218, 7064, 17309, 470, 580, 703, 2622, 61895, 78181, 44171, 166139, 24440, 24916, 24187, 23735, 24658, 30359, 30039, 32997, 33586,
15232, 121845, 48031, 63580, 109846, 61670, 80319, 87990, 54852, 55348, 1282, 2561, 9232, 805, 143992, 4285, 49053, 6865, 7193)
ato <- c(2841, 7850, 124882, 3336, 6724, 6991, 16736, 459, 572, 667, 2644, 58284, 73984, 42733, 147457, 22249, 23781, 22095, 23057, 22775, 28137, 27309, 31120, 32246,
16249, 111479, 45494, 60484, 106120, 62938, 75832, 82148, 52284, 51753, 1334, 2534, 8305, 709, 136442, 4212, 45258, 7157, 7275)
ga <- c(2776, 8134, 128961, 3323, 6561, 7157, 17627, 439, 571, 656, 2934, 58460, 74296, 42391, 153984, 23200, 23851, 22761, 22887, 24303, 28988, 28139, 31764, 33887,
15336, 127138, 44581, 60623, 103456, 63902, 78190, 87822, 63206, 60156, 1284, 2480, 9051, 724, 145193, 4315, 42645, 6870, 7013)
christ <- c(3375, 9302, 142967, 3887, 7068, 7622, 17695, 554, 688, 723, 2805, 62449, 74703, 44836, 161743, 26970, 25418, 24224, 24347, 28224, 34606, 32283, 34512, 36806,
17210, 121603, 56637, 66811, 104916, 67503, 81648, 105082, 70388, 60985, 1287, 2788, 11074, 810, 154941, 4688, 49674, 7329, 7732)
results_df <- data.frame(n = dimension, opt = opt, ato = ato, msa = msa, christ = christ, grdy = grdy, ga = ga)
results_ratio <- data.frame(n = dimension, ato = ato/opt, msa = msa/opt, chirst = christ/opt, grdy = grdy/opt, ga = ga/opt)
results_ratio <- gather(results_ratio, key = "method", value = "R", -n)
g2 <- ggplot(data = results_ratio, aes(x = n, y = R, col = method)) +
geom_point(size = 1) +
geom_abline(slope = 0, intercept = 1) +
labs(title = "Quality of Solution", x = "n", y = "Ratio") +
theme_bw() #+ scale_color_manual(values=cbPalette)
g2
results_ratio
results_ratio$R %>% min()
library(tidyverse)
library(gridExtra)
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
################################ DATA ######################################################################
dimension <- c(280, 52, 127, 14, 130, 150, 198, 51, 76, 101, 262, 96, 137, 202, 229, 100, 100, 100,
100, 100, 150, 150, 200, 200, 105, 76, 107, 124, 136, 144, 152, 226, 264, 299, 99, 195, 100,
70 ,225, 225, 159, 16, 22)
opt <- c(2579, 7542, 118282, 3323, 6110, 6528, 15780, 426, 538, 629, 2378, 55209, 69853, 40160, 134602, 21282, 22141,
20749, 21294, 22068, 26254, 26150, 29368, 29437, 14379, 108159, 44303, 59030, 96772, 58537, 73682, 80369, 49135, 48191, 1211, 2323, 7910, 675, 126643, 3919, 42080, 6859, 7013)
msa <- c(2765, 7542, 123904, 3323, 6460, 6669, 16528, 446, 564, 664, 2534, 55860, 73852, 42486, 153233, 21867, 22250, 21107, 22365, 22992, 27346, 26508, 30709, 30721, 14416,
110587, 44501, 59981, 102368, 58870, 76933, 82453, 49309, 51979, 1242, 2431, 8049, 685, 132363, 4032, 43229, 6859, 7013)
ratio <- round(100*(msa/opt-1),1)
time <- c(545, 8, 174, 1, 96, 176, 396, 7, 21, 72, 1030, 48, 74, 288, 720, 44, 80, 57, 53, 65, 216, 210, 528, 652, 89, 19, 95, 117, 145, 163, 152, 932, 878, 1236, 39, 317,
55, 15, 409, 793, 238, 1, 2)
results_df <- data.frame(R = ratio, n = dimension, t = time)
m <- lm(t ~  poly(n, 3, raw = TRUE), data = results_df)
coefficients(m)
time_predicted <- predict(m, data.frame(n = dimension))
g1 <- ggplot(results_df, aes(x = R)) + geom_histogram(aes(y = ..density..), bins = 20) + theme_bw() + xlab("% R") + ylab("Freq")
g2 <- ggplot(results_df, aes(x = n, y =R )) + geom_point() + theme_bw() + xlab("n") + ylab("%R")
g3 <- ggplot(results_df, aes(x = n, y = time )) + geom_point() + theme_bw() + xlab("n") + ylab("time") + geom_line(aes(y = time_predicted))
grid.arrange(g1, g2, g3, ncol=3)
msa <- c(2765, 7542, 123904, 3323, 6460, 6669, 16528, 446, 564, 664, 2534, 57378, 73852, 42486, 153233, 21867, 22250, 21107, 22365, 22992, 27346, 26508, 30709, 30721,
14416, 110587, 44501, 59981, 102368, 58870, 76933, 82453, 49309, 51979, 1242, 2431, 8049, 685, 132363, 4032, 43229, 6859, 7013)
grdy <- c(2958, 9623, 130443, 3323, 7218, 7064, 17309, 470, 580, 703, 2622, 61895, 78181, 44171, 166139, 24440, 24916, 24187, 23735, 24658, 30359, 30039, 32997, 33586,
15232, 121845, 48031, 63580, 109846, 61670, 80319, 87990, 54852, 55348, 1282, 2561, 9232, 805, 143992, 4285, 49053, 6865, 7193)
ato <- c(2841, 7850, 124882, 3336, 6724, 6991, 16736, 459, 572, 667, 2644, 58284, 73984, 42733, 147457, 22249, 23781, 22095, 23057, 22775, 28137, 27309, 31120, 32246,
16249, 111479, 45494, 60484, 106120, 62938, 75832, 82148, 52284, 51753, 1334, 2534, 8305, 709, 136442, 4212, 45258, 7157, 7275)
ga <- c(2776, 8134, 128961, 3323, 6561, 7157, 17627, 439, 571, 656, 2934, 58460, 74296, 42391, 153984, 23200, 23851, 22761, 22887, 24303, 28988, 28139, 31764, 33887,
15336, 127138, 44581, 60623, 103456, 63902, 78190, 87822, 63206, 60156, 1284, 2480, 9051, 724, 145193, 4315, 42645, 6870, 7013)
christ <- c(3375, 9302, 142967, 3887, 7068, 7622, 17695, 554, 688, 723, 2805, 62449, 74703, 44836, 161743, 26970, 25418, 24224, 24347, 28224, 34606, 32283, 34512, 36806,
17210, 121603, 56637, 66811, 104916, 67503, 81648, 105082, 70388, 60985, 1287, 2788, 11074, 810, 154941, 4688, 49674, 7329, 7732)
results_df <- data.frame(n = dimension, opt = opt, ato = ato, msa = msa, christ = christ, grdy = grdy, ga = ga)
results_ratio <- data.frame(n = dimension, ato = ato/opt, msa = msa/opt, chirst = christ/opt, grdy = grdy/opt, ga = ga/opt)
results_ratio <- gather(results_ratio, key = "method", value = "R", -n)
g2 <- ggplot(data = results_ratio, aes(x = n, y = R, col = method)) +
geom_point(size = 2) +
geom_abline(slope = 0, intercept = 1) +
labs(title = "Quality of Solution", x = "n", y = "Ratio") +
theme_bw() #+ scale_color_manual(values=cbPalette)
g2
g2 <- ggplot(data = results_ratio, aes(x = n, y = R, col = method, shape = method)) +
geom_point(size = 2) +
geom_abline(slope = 0, intercept = 1) +
labs(title = "Quality of Solution", x = "n", y = "Ratio") +
theme_bw() #+ scale_color_manual(values=cbPalette)
g2
g2 <- ggplot(data = results_ratio, aes(x = n, y = R, col = method)) +
geom_point(size = 2) +
geom_abline(slope = 0, intercept = 1) +
labs(title = "Quality of Solution", x = "n", y = "Ratio") +
theme_bw() #+ scale_color_manual(values=cbPalette)
g2
g2 <- ggplot(data = results_ratio, aes(x = n, y = R, col = method)) +
geom_point(size = 2) +
geom_abline(slope = 0, intercept = 1) +
labs(title = "Quality of Solution", x = "n", y = "Ratio") +
geom_line(aes(x = n, y = R, group = method), size = 0.2) +
theme_bw() #+ scale_color_manual(values=cbPalette)
g2
g2 <- ggplot(data = results_ratio, aes(x = n, y = R, col = method)) +
geom_point(size = 2) +
geom_abline(slope = 0, intercept = 1) +
labs(title = "Quality of Solution", x = "n", y = "Ratio") +
geom_smooth(aes(x = n, y = R, group = method), size = 0.2) +
theme_bw() #+ scale_color_manual(values=cbPalette)
g2
g2 <- ggplot(data = results_ratio, aes(x = n, y = R, col = method)) +
geom_point(size = 2) +
geom_abline(slope = 0, intercept = 1) +
labs(title = "Quality of Solution", x = "n", y = "Ratio") +
geom_smooth(aes(group = method), method = loess, size = 0.2) +
theme_bw() #+ scale_color_manual(values=cbPalette)
g2
g4 <- ggplot(data = results_ratio, aes(x = n, y = R, col = method)) +
geom_point(size = 2) +
geom_abline(slope = 0, intercept = 1) +
labs(title = "Quality of Solution", x = "n", y = "Ratio") +
geom_smooth(aes(group = method), method = loess, size = 0.2, se = FALSE) +
theme_bw() #+ scale_color_manual(values=cbPalette)
g4
g4 <- ggplot(data = results_ratio, aes(x = n, y = R, col = method)) +
geom_point(size = 1) +
geom_abline(slope = 0, intercept = 1) +
labs(title = "Quality of Solution", x = "n", y = "Ratio") +
geom_smooth(aes(group = method), method = loess, size = 3, se = FALSE) +
theme_bw() #+ scale_color_manual(values=cbPalette)
g4
g4 <- ggplot(data = results_ratio, aes(x = n, y = R, col = method)) +
geom_point(size = 1) +
geom_abline(slope = 0, intercept = 1) +
labs(title = "Quality of Solution", x = "n", y = "Ratio") +
geom_smooth(aes(group = method), method = loess, size = 2, se = FALSE) +
theme_bw() #+ scale_color_manual(values=cbPalette)
g4
g4 <- ggplot(data = results_ratio, aes(x = n, y = R, col = method)) +
geom_point(size = 1) +
geom_abline(slope = 0, intercept = 1) +
labs(title = "Quality of Solution", x = "n", y = "Ratio") +
geom_smooth(aes(group = method), method = loess, size = 2, se = FALSE) +
theme_bw() + scale_color_manual(values=cbPalette)
g4
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
g4 <- ggplot(data = results_ratio, aes(x = n, y = R, col = method)) +
geom_point(size = 1) +
geom_abline(slope = 0, intercept = 1) +
labs(title = "Quality of Solution", x = "n", y = "Ratio") +
geom_smooth(aes(group = method), method = loess, size = 2, se = FALSE) +
theme_bw() + scale_color_manual(values=cbPalette)
g4
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
library(tidyverse)
library(gridExtra)
g4 <- ggplot(data = results_ratio, aes(x = n, y = R, col = method)) +
geom_point(size = 1) +
geom_abline(slope = 0, intercept = 1) +
labs(title = "Quality of Solution", x = "n", y = "Ratio") +
geom_smooth(aes(group = method), method = loess, size = 2, se = FALSE) +
theme_bw() + scale_color_manual(values=cbPalette)
g4
g4 <- ggplot(data = results_ratio, aes(x = n, y = R, col = method)) +
geom_point(size = 1) +
geom_abline(slope = 0, intercept = 1) +
labs(title = "Quality of Solution", x = "n", y = "Ratio") +
geom_smooth(aes(group = method), method = loess, size = 2, se = FALSE) +
theme_bw() + scale_color_manual(values=cbbPalette)
g4
g4 <- ggplot(data = results_ratio, aes(x = n, y = R, col = method)) +
geom_point(size = 1) +
geom_abline(slope = 0, intercept = 1) +
labs(title = "Quality of Solution", x = "n", y = "Ratio") +
geom_smooth(aes(group = method), method = loess, size = 2, se = FALSE) +
theme_bw() #+ scale_color_manual(values=cbbPalette)
g4
